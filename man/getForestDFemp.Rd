% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getForestDFemp.R
\name{getForestDFemp}
\alias{getForestDFemp}
\title{getForestDFemp}
\usage{
getForestDFemp(
  dfData,
  covExpressionsList,
  noBaseThetas,
  dfParameters,
  cdfCovsNames = NULL,
  functionList = list(function(basethetas, dfrow, ...) {     return(basethetas[1]) }),
  functionListName = "PAR1",
  strID = "ID",
  quiet = TRUE,
  metricFunction = median,
  probs = c(0.025, 0.975),
  pointFunction = median,
  dfRefRow = NULL,
  cGrouping = NULL,
  ncores = 1,
  cstrPackages = NULL,
  cstrExports = NULL,
  iMiss = -99,
  ...
)
}
\arguments{
\item{noBaseThetas}{the number of structural thetas in the model}

\item{dfParameters}{A data frame with parameter samples from the uncertainty distribution.
The vector of final parameter estimates is assumed to be in the first row.
The column order is assumed the same as in the NONMEM ext file except the ITERATION and OBJ columns whichshould not be included.}

\item{cdfCovsNames}{A string vector with names of the rows in dfCovs, if not used, names will be
automatically assigned based on the covariate values and column names in dfCovs.}

\item{functionList}{A list of functions with input (basethetas, covthetas,dfrow and ...) from which the change
from the reference value will be calculated. If the function returns a vector of values, each value will be used
but functionListName must contain the names with a length of all return for all functions in the functionList}

\item{functionListName}{A vector of strings (names) of the parameters for each function in the functionList}

\item{quiet}{If output should be allowed during the function call, default= TRUE. (This option is mainly for debugging purposes.)}

\item{probs}{A vector of probabilities that should be computed for each of the parameters from functionList. These will be used as the
as the uncertainties in the Forest plots. The probs vector position one and two will be used for plotting the uncertanties (i.e. columns q1 and q2). Default is c(0.025, 0.975)}

\item{pointFunction}{The function used to calculate the point for each covariate in the forest plot. default=median
This function is also used for the reference covariate combination}

\item{dfRefRow}{A data frame (one row) with the covariate values that will be used as the reference, if NULL the typical subject is used as reference.}

\item{cGrouping}{A vector of the same length as covExpressionList to indicate groupings of covariates. Default is no grouping. See example.}

\item{ncores}{the number of cores to use for the calculations, default = 1 which means no parallellization}

\item{cstrPackages}{a character vector with package names needed to run the calculations in parallel, default = NULL}

\item{cstrExports}{a character vector with variables needed to run the calculations in parallel, default = NULL}

\item{iMiss}{The missing value number. -99 by default.}

\item{...}{additional variables to be forwarded to the the functionList functions}

\item{covExpressionList}{A list of expressions that define the covariate values to visualize in the Forest plot.}

\item{metricfunction}{The function to use to summarise the parameter values in each covariate category. Default is median.}
}
\value{
A data frame
}
\description{
getForestDFemp
}
\examples{
\dontrun{
lsExpr<-rev(list(expression(SEX==2),
expression(SEX==1),
expression(CRCL>=146),
expression(CRCL<94),
expression(AGE>=57),
expression(AGE<35),
expression(WT>104),
expression(WT<70),
expression(RACEL==3),
expression(RACEL==2),
expression(RACEL==1),
expression(GENO==4),
expression(GENO==3),
expression(GENO==2),
expression(GENO==1),
expression(FOOD==1),
expression(FOOD==0),
expression(FORM==1),
expression(FORM==0)))

cGrouping = c(1,1,2,2,3,3,3,3,4,4,4,5,5,6,6,7,7,8,8,9,9)

covnamesEmp <- c("Oral tablets","FDC","Fasted","Fed","2D6 UM","2D6 EM","2D6 IM","2D6 PM","Caucasian","African American","Asian and other","WT<70 kg","WT>104 kg",
               "Age<35 y","Age>57 y","CRCL<94 mL/min","CRCL>146 mL/min","Male","Female")



dfresCOVemp<-getForestDFemp(
  metricFunction     = median,
  cGrouping          = cGrouping,
  dfData             = dfData,
  covExpressionsList = lsExpr,
  cdfCovsNames       = covnamesEmp,
  functionList       = list(paramFunction),
  functionListName   = functionListName,
  noBaseThetas       = 16,
  dfParameters       = dfSamplesCOV,
  ncores             = 6)
}
}
