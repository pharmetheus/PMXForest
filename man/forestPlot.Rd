% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forestPlot.R
\name{forestPlot}
\alias{forestPlot}
\title{Forest plots}
\usage{
forestPlot(
  dfres,
  plotData = NULL,
  plotRelative = TRUE,
  noVar = TRUE,
  referenceParameters = "func",
  sigdigits = 2,
  parameters = unique(dfres$PARAMETER),
  parameterLabels = parameters,
  groupNameLabels = NULL,
  referenceInfo = "auto",
  labelfun = label_value,
  groupname_labelfun = label_value,
  ref_area = c(0.8, 1.25),
  ref_fill_col = "#508791",
  ref_fill_alpha = 0.4,
  ref_line_size = 1,
  ref_line_type = "dotted",
  ref_line_col = "black",
  ci_line_type = "solid",
  ci_line_col = "#323c46",
  ci_line_size = 0.7,
  point_shape = 16,
  point_color = "#323c46",
  point_size = 3,
  tabTextSize = 10,
  keepYlabs = FALSE,
  keepRightStrip = FALSE,
  stackedPlots = FALSE,
  strip_right_size = NULL,
  strip_top_size = NULL,
  ref_subj_label = "Reference subject",
  ref_area_label = "Reference area",
  point_label = "Point estimate",
  ci_label = "Confidence interval",
  statisticsLabel = paste("Statistics:", parameterLabels),
  xlb = ifelse(plotRelative, "Relative parameter value", "Parameter value"),
  return = "plot",
  table = TRUE,
  rightStrip = TRUE,
  errbartabwidth = rep(c(2, 1), length(parameters)),
  errbarplotscale = 1.45,
  tabplotscale = 1.1,
  onlySignificant = FALSE,
  onlySignificantErrorBars = FALSE,
  setSignEff = NULL,
  ...
)
}
\arguments{
\item{dfres}{A data.frame as output from getForestDFSCM, getForestDFFREM or getForestDFemp.}

\item{plotData}{A \code{data.frame} to be used for creating the Forest plot. If \code{plotData} is provided \code{dfres} is ignored. See Details.}

\item{plotRelative}{Should the plot be made on the relative scale (TRUE or FALSE)}

\item{noVar}{Should the uncertainty in the reference be included (FALSE) or not (TRUE)}

\item{referenceParameters}{Character string indicating how the reference parameter estimates were obtained.
"final" means the final parameter estimates from the model. "func" means the mean parameter estimates across the posterior distribution.}

\item{sigdigits}{An integer number specifying the number of significant digits to use in the statistics tables.}

\item{parameters}{A character vector with the parameters present in the dfres$PARAMETER column to be included in the output.}

\item{parameterLabels}{A vector of labels for the parameters. Should either have the same length as \code{parameters} or the same length as the number of rows in \code{dfres}.
Is by default the same as \code{parameters}. Used for faceting the errorbar panels in the Forest plot in the x-direction (columns).}

\item{groupNameLabels}{A vector of labels for the covariate groups. Should either have the same length as the number unique values in \code{dfres$GROUPNAME} or the same length as the number of rows in \code{dfres}.
Is by default the same as \code{dfres$GROUPNAME}.}

\item{referenceInfo}{A character string or NULL. If set to NULL, no information about how the reference line was derived will be displayed. If set to "auto",
generic information based on \code{referenceParameters} and the \code{REFROW} column in \code{dfres} will be included at the bottom of the plot. If not NULL or "auto",
then the character string will be displayed below the plot. Uses \code{ggpubr::annotate_figure} and \code{ggpubr::text_grob} to place and format the text.
Formatting instructions to \code{ggpubr::text_grob} are passed on through \code{...}. Default is "auto".}

\item{labelfun}{A label function compatible with \code{labeller}. Used to format \code{parameterLabels} used as column facet labels for the errorbar and table plots.
Default is \code{label_value}.}

\item{groupname_labelfun}{A label function compatible with \code{labeller}. Used to format \code{groupNameLabels} used as row facet labels for the errorbar and table plots.
Default is \code{label_value}.}

\item{ref_area}{Numerical vector indicating the horizontal size of the reference area. The default is \code{c(0.8,1.25)}. Used to multiply the reference value to derive the actual
xmin and xmax values for the reference area.}

\item{ref_fill_col}{Reference area color.}

\item{ref_fill_alpha}{Reference area alpha value.}

\item{ref_line_size}{Reference line size.}

\item{ref_line_type}{Reference line linetype.}

\item{ref_line_col}{Reference line color.}

\item{ci_line_type}{Errorbar linetype.}

\item{ci_line_col}{Errorbar color.}

\item{ci_line_size}{Errorbar size.}

\item{point_shape}{Point estimate shape.}

\item{point_color}{Point estimate color.}

\item{point_size}{Size of the point estimate symbol.}

\item{tabTextSize}{The size (pt) of the text in the table plots.}

\item{keepYlabs}{Logical. Should the labels on the y-axis be kept for all errorbar panels.}

\item{keepRightStrip}{Logical. Should the right facet titles be kept for all table plots. Only when \code{rightStrip} is \code{TRUE}.}

\item{stackedPlots}{Should the plots for the parameters be stacked instead of being vertical. Useful if there are many parameters to visualize. Works best with \code{keepYlab} and \code{keepRightStrip} set to \code{TRUE}.}

\item{strip_right_size}{Size of the facet text on the right (in pt). Default is NULL, which will fall back on the theme default.}

\item{strip_top_size}{Size of the facet text on the top (in pt). Default is NULL, which will fall back on the theme default.}

\item{ref_subj_label}{A character string indicating the label to be used for the reference subject in the figure legend. Default is "Reference subject".}

\item{ref_area_label}{A character string indicating the label to be used for the reference area in the figure legend. Default is "Reference area".}

\item{point_label}{A character string indicating the label to be used for the point estimates in the figure legend. Default is "Point estimate".}

\item{ci_label}{A character string indicating the label to be used for the confidence interval in the figure legend. Default is "Confidence interval".}

\item{statisticsLabel}{A vector of character string of the same length as \code{parameters} to be used as facet labels for the table plots.}

\item{xlb}{x-axis label for the errorbar plots}

\item{return}{Either "plot" (default), "plotList" or "data". "plot" returns the \code{ggpubr::ggarrange} object. "plotList" returns a list of the different plots that make up
the Forest plot (see Details). "data" returns a \code{data.frame} with the actual data used to create the Forest plot.}

\item{table}{Logical. Should the table plots be included in the Forest plot or not.}

\item{rightStrip}{Should the facet title in the rightmost panel in the Forest plot be displayed? If TRUE (the default) \code{groupNameLabels} will be used as the facets labels.}

\item{errbartabwidth}{A numerical vector of length 2 times the number of parameters included in the Forest plot, specifying the relative width of the errorbar and table plots. Have no effect when \code{table} is FALSE.}

\item{errbarplotscale}{Scaling factor for the width of the leftmost errorbar plot to compensate for y-axis labels.}

\item{tabplotscale}{Scaling factor for the width of the rightmost column (usually a table plot) to adjust for the size of the right strip.}

\item{onlySignificant}{Logical. Should only the significant covariates be included (TRUE) or all covariates regardless of significance (FALSE).}

\item{onlySignificantErrorBars}{Logical. Should error bars be hidden for non-significant covariates (TRUE) or be shown for all covariates regardless of significance (FALSE).}

\item{...}{Arguments passed on to \code{ggpubr::text_grob}.}
}
\value{
A \code{ggpubr::ggarrange} object, a list of plots or a \code{data.frame}.
}
\description{
Create Forest plots consisting of alternating columns of errorbar plots and tabulated numerical statistics.
}
\details{
If \code{plotData} is NULL, \code{dfres} is passed to \code{setupForestPlotData} to create a \code{data.frame} that contains the exact data to be plotted, including the numerical statistics.
If \code{return} is set to "data" then the \code{data.frame} is returned. This makes it possible to to review the data and/or do modifications if necessary. \code{forestPlot} can
be called with \code{plotData} set to the name of the \code{data.frame}, in which case \code{dfres} is not required and the \code{plotData} \code{data.frame} will be used for
creating the Forest plot.

The Forest plots are created as a combination of separate errorbar plots and plots with the table information. Each panel is a separate plot, which are combined using \code{ggpubr::ggarrange}.
In other words, even if the plot looks like a regular faceted plot it is not. For example, in a one parameter Forest plot with \code{table=TRUE}, the left panel is an errorbar plot with the right
facet labels suppressed and the right plot is a plot with text, and which have the y-axis labels suppressed. In a plot with three parameters the errobar plot for the middle parameter will have both the y-axis labels and
facet labels suppressed. the same is true for that parameter's table plot. The arguments \code{keepYlabs} and \code{keepRightStrip} controls if the y-axis labels and right facet labels for panels "in the middle" should
keep the axis and facet labels or not.

\code{stackedPlots} switch from the default stacked horizontal orientation used if multiple parameters are included to vertical stacking. For this to provide a nice display it
is necessary to have \code{keepYlabs} set to \code{TRUE} and \code{keepRightStrip=TRUE}. \code{stackedPlots} can be combind with \code{table=FALSE} and  \code{rightStrip=FALSE}.

The graphical settings use standard \code{ggplot} syntax.
}
\examples{
\dontrun{
# Create a Forest plot, including the table part, for all parameters in dfres.

forestPlot(dfres)

# Exclude the table part of the plot

forestPlot(dfres,table=FALSE)

# Create a Forest plot for the specified parameter (which need to be included in dfres).

forestPlot(dfres,parameters="CL")

# Specify group name labels, the size of the table text and x-axis label

forestPlot(dfres,parameters=c("CL"),groupNameLabels = c("Age (y)","Sex","Weight (kg)"),
           tabTextSize = 20,xlb="Relative parameter value")

# Stack the plots instead of plot them horizontally

forestPlot(dfres,parameters = c("CL","Frel"),stackedPlots = TRUE,
           keepYlabs = TRUE,keepRightStrip = TRUE)
}
}
